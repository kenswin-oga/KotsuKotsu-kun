# docker-composeのバージョン
version: "2"

# コンテナの定義
services: 
  # nginxコンテナ
  web:
    # コンテナ名
    container_name: "web"
    build:
      context: "./"
      dockerfile: "./web/Dockerfile"
    ports:
      - "8080:80"
    volumes:
      - "./src:/var/www/html"
    depends_on:
      - php

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    environment:
      NGROK_AUTHTOKEN: "2cbobgX8pZzqAIlLwDNwZXz3uhj_76vHXxGJmDhEgCEznoR93"
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040

  # PHPコンテナ
  php:
    container_name: "php"
    build:
      context: "./"
      dockerfile: "./php/Dockerfile"
    volumes:
      - "./src:/var/www/html"
  # DBコンテナ
  db:
    container_name: "db"
    build:
      context: "./"
      dockerfile: "./db/Dockerfile"
    ports:
      - "3306:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=password"
      - "MYSQL_DATABASE=database"
      - "MYSQL_USER=laravel"
      - "MYSQL_PASSWORD=password"
    volumes:
      - "./db/data:/var/lib/mysql"

  # phpmyadmin
  phpmyadmin:
    build:
      context: "./"
      dockerfile: "./phpmyadmin/Dockerfile"
    container_name: "phpmyadmin"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=laravel
      - PMA_PASSWORD=password
    links:
      - db
    ports:
      - "8888:80"
    volumes:
      - ./phpmyadmin/sessions:/sessions
  
  # npm
  npm:
    build:
      context: "./"
      dockerfile: "./npm/Dockerfile"
    container_name: "npm"
    volumes:
      - "./src:/workspace"